{"version":3,"sources":["componens/watermark.js","componens/footer.js","App.js","serviceWorker.js","index.js"],"names":["Watermark","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","state","imgShow","alert","setState","waterValue","target","value","focusChange","waterinputFocus","blurChange","colorChange","preventDefault","waterColor","fontChange","waterFont","clearanceChange","clearance","inputChange","reads","FileReader","file","files","readAsDataURL","onload","e","imgUrl","result","img","Image","src","addWaterMark","_this$state","document","getElementById","canvas","ctx","getContext","ox","width","oy","height","drawImage","save","translate","rotate","Math","PI","fillStyle","font","concat","a","b","fillText","restore","saveImg","strDataURI","toDataURL","href","_this$state2","react_default","createElement","className","htmlFor","type","id","onFocus","onBlur","onChange","accept","onClick","javascript","download","alt","React","Component","Footer","App","componens_watermark","componens_footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8067116b.chunk.js","sourcesContent":["import React from 'react'\r\nimport './watermark.scss'\r\n\r\nclass Watermark extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      waterValue: '此证件仅供办理XX业务使用，他用无效',\r\n      waterinputFocus: false,\r\n      imgUrl: 'https://ws1.sinaimg.cn/large/007DE5Hlgy1g3hy90jdjkj30ic0bcaig.jpg',\r\n      imgShow: true,\r\n      waterColor: '#000000',\r\n      waterFont: '10',\r\n      clearance: '100'\r\n    }\r\n  }\r\n  componentDidUpdate(){\r\n    this.addWaterMark()\r\n  }\r\n  // 改变input输入\r\n  handleChange = (event) => {\r\n    if (this.state.imgShow) {\r\n      alert('请先选择图片')\r\n    } else {\r\n      this.setState({\r\n        waterValue: event.target.value\r\n      })\r\n    }\r\n  }\r\n  // 聚焦改变input颜色\r\n  focusChange = () => {\r\n    this.setState({\r\n      waterinputFocus: true\r\n    })\r\n  }\r\n  // 失焦改变input颜色\r\n  blurChange = () => {\r\n    this.setState({\r\n      waterinputFocus: false\r\n    })\r\n  }\r\n  // 监听颜色变化\r\n  colorChange = (event) => {\r\n    event.preventDefault()\r\n    if (this.state.imgShow) {\r\n      alert('请先选择图片')\r\n    } else {\r\n      this.setState({\r\n        waterColor: event.target.value\r\n      })\r\n    }\r\n  }\r\n  // 监听字体大小变化\r\n  fontChange = (event) => {\r\n    if (this.state.imgShow) {\r\n      alert('请先选择图片')\r\n    } else {\r\n      this.setState({\r\n        waterFont: event.target.value\r\n      })\r\n    }\r\n  }\r\n  // 监听文字间隙变化\r\n  clearanceChange = (event) => {\r\n    if (this.state.imgShow) {\r\n      alert('请先选择图片')\r\n    } else {\r\n      this.setState({\r\n        clearance: event.target.value\r\n      })\r\n    }\r\n  }\r\n  //inputchange事件\r\n  inputChange = (event) => {\r\n    let reads = new FileReader()\r\n    let file = event.target.files[0]\r\n    reads.readAsDataURL(file)\r\n    reads.onload = e => {\r\n      this.setState({\r\n        imgUrl: e.target.result,\r\n        imgShow: false\r\n      })\r\n      let img = new Image()\r\n      img.src = e.target.result\r\n      img.onload = () => {\r\n        this.addWaterMark()\r\n      }\r\n    }\r\n  }\r\n  // 添加水印\r\n  addWaterMark = () => {\r\n    const {waterColor,waterFont,clearance,waterValue} = this.state\r\n    let img = document.getElementById('img')\r\n    let canvas = document.getElementById('canvas')\r\n    let ctx = canvas.getContext('2d')\r\n    let ox = canvas.width / 2\r\n    let oy = canvas.height / 2\r\n    canvas.width = img.width\r\n    canvas.height = img.height\r\n    // 原图\r\n    ctx.drawImage(img, 0, 0)\r\n    ctx.save()\r\n    // 旋转图\r\n    ctx.translate(ox, oy) // 将绘图圆点移到画布中点\r\n    ctx.rotate(45 * Math.PI/180) //弧度 = (Math.PI/180)*角度\r\n    ctx.translate(-ox, -oy)\r\n    // // 创建渐变\r\n    // var gradient=ctx.createLinearGradient(0,0,canvas.width,0);\r\n    // gradient.addColorStop(\"0\",\"magenta\");\r\n    // gradient.addColorStop(\"0.5\",\"blue\");\r\n    // gradient.addColorStop(\"1.0\",\"red\");\r\n    // // 用渐变填色\r\n    // ctx.fillStyle=gradient;\r\n    ctx.fillStyle = waterColor\r\n    ctx.font = `${waterFont}px Georgia`\r\n    for (let a = -img.width / clearance; a < img.width / clearance; a++) {\r\n      for (let b = -img.height / clearance; b < img.height / clearance * 2; b++) {\r\n        ctx.fillText(waterValue, a * clearance * 2, 10 + b * clearance)\r\n      }\r\n    }\r\n    ctx.restore()\r\n  }\r\n  // 保存图片\r\n  saveImg = (event) => {\r\n    if (this.state.imgShow) {\r\n      alert('请先选择图片')\r\n      event.preventDefault()\r\n    } else {\r\n      let canvas = document.getElementById('canvas')\r\n      let strDataURI = canvas.toDataURL('image/png')\r\n      let a = document.getElementById('saveimg')\r\n      a.href = strDataURI\r\n    }\r\n  }\r\n  render () {\r\n    let { waterValue,waterinputFocus,imgUrl,imgShow,waterColor,waterFont,clearance } = this.state\r\n    return (\r\n      <div className=\"watermark\">\r\n        <div className=\"header\">\r\n          <label htmlFor=\"waterValue\"\r\n          className=\"waterLabel\">水印文字</label>\r\n          <input type=\"text\" value={waterValue} id=\"waterValue\"\r\n            onFocus={this.focusChange}\r\n            onBlur={this.blurChange}\r\n            className={ `waterinput ${waterinputFocus ? 'active' : ''}`}\r\n            onChange={this.handleChange}/>\r\n          <div className=\"selectImg\">\r\n            <input type=\"file\" id=\"inputimg\"\r\n            accept=\"image/png, image/jpeg, image/gif, image/jpg\"\r\n            onChange={this.inputChange}/>\r\n            <label className=\"labelimg\" htmlFor=\"inputimg\">选择图片</label>\r\n          </div>\r\n          <div className=\"saveImg\"\r\n            onClick={this.saveImg}>\r\n            <a href={{javascript:void(0)}} \r\n            id=\"saveimg\" \r\n            download=\"shenzjd_com.png\">保存图片</a>\r\n          </div>\r\n        </div>\r\n        <div className=\"config\">\r\n          <div className=\"waterColor\">\r\n            <label htmlFor=\"waterColor\">水印颜色(点我选择水印颜色)：</label>\r\n            <input value={waterColor} type=\"color\"\r\n            id=\"waterColor\"\r\n            onChange={this.colorChange}/>\r\n          </div>\r\n          <div className=\"waterFont\">\r\n            <label htmlFor=\"waterFont\">字体大小：</label>\r\n            <input type=\"number\" id=\"waterFont\"\r\n             onChange={this.fontChange}\r\n             value={waterFont}/>px\r\n          </div>\r\n          <div className=\"clearance\">\r\n            <label htmlFor=\"clearance\">文字间隙：</label>\r\n            <input type=\"number\" id=\"clearance\"\r\n            onChange={this.clearanceChange}\r\n            value={clearance}/>px\r\n          </div>\r\n        </div>\r\n        <div className=\"container\">\r\n          <img src={imgUrl} alt=\"\" id=\"img\"\r\n          className={imgShow ? '' : 'none'}/>\r\n          <canvas id=\"canvas\"\r\n          className={imgShow ? 'none' : ''}\r\n          width=\"1000px\" height=\"700px\"></canvas>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Watermark","/* eslint-disable react/jsx-no-target-blank */\r\nimport React from 'react'\r\nimport './footer.scss'\r\n\r\nclass Footer extends React.Component {\r\n  render () {\r\n    return (\r\n      <div className=\"footer\">\r\n        <div className=\"container\">\r\n          官方网站： <a href=\"https://shenzjd.com\"target=\"_blank\">神族九帝</a>&emsp;\r\n          源码：<a href=\"https://github.com/wu529778790/shenzjd.com\"target=\"_blank\">Github</a>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Footer","/* eslint-disable react/jsx-no-target-blank */\nimport React from 'react';\nimport './App.scss'\nimport Watermark from './componens/watermark'\nimport Footer from './componens/footer'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>水墨清香：一款本地水印添加工具</h1>\n        <h5>加水印操作在本地完成，任何证件信息不会上传到网站，请放心使用\n          <a href=\"https://github.com/wu529778790/shenzjd.com\" \n          target=\"_blank\">开源更放心</a>\n        </h5>\n      </header>\n      <Watermark />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}